#!/usr/bin/env python

# Copyright 2021 - 2023 Simon Klarmann <simon.klarmann@gmail.com>
#
# SPDX-License-Identifier: BSD-3-Clause

###
### This file is generated automatically by SALOME v9.7.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'/home/simon/git/cppfemtemp')

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Box_1 = geompy.MakeBoxDXDYDZ(200, 200, 200)
[Face_1,Face_2,Face_3,Face_4,Face_5,Face_6] = geompy.ExtractShapes(Box_1, geompy.ShapeType["FACE"], True)
[Face_1, Face_2, Face_3, Face_4, Face_5, Face_6] = geompy.GetExistingSubObjects(Box_1, False)
O_1 = geompy.MakeVertex(0, 0, 0)
OX_1 = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY_1 = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ_1 = geompy.MakeVectorDXDYDZ(0, 0, 1)
Box_1_1 = geompy.MakeBoxDXDYDZ(200, 200, 200)
[Face_1_1,Face_2_1,Face_3_1,Face_4_1,Face_5_1,Face_6_1] = geompy.ExtractShapes(Box_1_1, geompy.ShapeType["FACE"], True)
[Face_1_1, Face_2_1, Face_3_1, Face_4_1, Face_5_1, Face_6_1] = geompy.GetExistingSubObjects(Box_1_1, False)
O_2 = geompy.MakeVertex(0, 0, 0)
OX_2 = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY_2 = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ_2 = geompy.MakeVectorDXDYDZ(0, 0, 1)
Box_1_2 = geompy.MakeBoxDXDYDZ(200, 200, 200)
[Face_1_2,Face_2_2,Face_3_2,Face_4_2,Face_5_2,Face_6_2] = geompy.ExtractShapes(Box_1_2, geompy.ShapeType["FACE"], True)
[Face_1_2, Face_2_2, Face_3_2, Face_4_2, Face_5_2, Face_6_2] = geompy.GetExistingSubObjects(Box_1_2, False)
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Box_1, 'Box_1' )
geompy.addToStudyInFather( Box_1, Face_1, 'Face_1' )
geompy.addToStudyInFather( Box_1, Face_2, 'Face_2' )
geompy.addToStudyInFather( Box_1, Face_3, 'Face_3' )
geompy.addToStudyInFather( Box_1, Face_4, 'Face_4' )
geompy.addToStudyInFather( Box_1, Face_5, 'Face_5' )
geompy.addToStudyInFather( Box_1, Face_6, 'Face_6' )
geompy.addToStudy( O_1, 'O' )
geompy.addToStudy( OX_1, 'OX' )
geompy.addToStudy( OY_1, 'OY' )
geompy.addToStudy( OZ_1, 'OZ' )
geompy.addToStudy( Box_1_1, 'Box_1' )
geompy.addToStudyInFather( Box_1_1, Face_1_1, 'Face_1' )
geompy.addToStudyInFather( Box_1_1, Face_2_1, 'Face_2' )
geompy.addToStudyInFather( Box_1_1, Face_3_1, 'Face_3' )
geompy.addToStudyInFather( Box_1_1, Face_4_1, 'Face_4' )
geompy.addToStudyInFather( Box_1_1, Face_5_1, 'Face_5' )
geompy.addToStudyInFather( Box_1_1, Face_6_1, 'Face_6' )
geompy.addToStudy( O_2, 'O' )
geompy.addToStudy( OX_2, 'OX' )
geompy.addToStudy( OY_2, 'OY' )
geompy.addToStudy( OZ_2, 'OZ' )
geompy.addToStudy( Box_1_2, 'Box_1' )
geompy.addToStudyInFather( Box_1_2, Face_1_2, 'Face_1' )
geompy.addToStudyInFather( Box_1_2, Face_2_2, 'Face_2' )
geompy.addToStudyInFather( Box_1_2, Face_3_2, 'Face_3' )
geompy.addToStudyInFather( Box_1_2, Face_4_2, 'Face_4' )
geompy.addToStudyInFather( Box_1_2, Face_5_2, 'Face_5' )
geompy.addToStudyInFather( Box_1_2, Face_6_2, 'Face_6' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

Mesh_1 = smesh.Mesh(Box_1)
Regular_1D = Mesh_1.Segment()
Number_of_Segments_1 = Regular_1D.NumberOfSegments(2)
Quadrangle_2D = Mesh_1.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Hexa_3D = Mesh_1.Hexahedron(algo=smeshBuilder.Hexa)
Face_1_3 = Mesh_1.GroupOnGeom(Face_1,'Face_1',SMESH.FACE)
Face_2_3 = Mesh_1.GroupOnGeom(Face_2,'Face_2',SMESH.FACE)
Face_3_3 = Mesh_1.GroupOnGeom(Face_3,'Face_3',SMESH.FACE)
Face_4_3 = Mesh_1.GroupOnGeom(Face_4,'Face_4',SMESH.FACE)
Face_5_3 = Mesh_1.GroupOnGeom(Face_5,'Face_5',SMESH.FACE)
Face_6_3 = Mesh_1.GroupOnGeom(Face_6,'Face_6',SMESH.FACE)
isDone = Mesh_1.Compute()
[ Face_1_3, Face_2_3, Face_3_3, Face_4_3, Face_5_3, Face_6_3 ] = Mesh_1.GetGroups()
Mesh_1_1 = smesh.Mesh(Box_1_1)
Regular_1D_1 = Mesh_1_1.Segment()
Number_of_Segments_1_1 = Regular_1D_1.NumberOfSegments(2,None,[])
Quadrangle_2D_1 = Mesh_1_1.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Hexa_3D_1 = Mesh_1_1.Hexahedron(algo=smeshBuilder.Hexa)
Face_1_4 = Mesh_1_1.GroupOnGeom(Face_1_1,'Face_1',SMESH.FACE)
Face_2_4 = Mesh_1_1.GroupOnGeom(Face_2_1,'Face_2',SMESH.FACE)
Face_3_4 = Mesh_1_1.GroupOnGeom(Face_3_1,'Face_3',SMESH.FACE)
Face_4_4 = Mesh_1_1.GroupOnGeom(Face_4_1,'Face_4',SMESH.FACE)
Face_5_4 = Mesh_1_1.GroupOnGeom(Face_5_1,'Face_5',SMESH.FACE)
Face_6_4 = Mesh_1_1.GroupOnGeom(Face_6_1,'Face_6',SMESH.FACE)
isDone = Mesh_1_1.Compute()
[ Face_1_4, Face_2_4, Face_3_4, Face_4_4, Face_5_4, Face_6_4 ] = Mesh_1_1.GetGroups()
Mesh_1_2 = smesh.Mesh(Box_1_2)
Regular_1D_2 = Mesh_1_2.Segment()
Number_of_Segments_1_2 = Regular_1D_2.NumberOfSegments(2,None,[])
Quadrangle_2D_2 = Mesh_1_2.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Hexa_3D_2 = Mesh_1_2.Hexahedron(algo=smeshBuilder.Hexa)
Face_1_5 = Mesh_1_2.GroupOnGeom(Face_1_2,'Face_1',SMESH.FACE)
Face_2_5 = Mesh_1_2.GroupOnGeom(Face_2_2,'Face_2',SMESH.FACE)
Face_3_5 = Mesh_1_2.GroupOnGeom(Face_3_2,'Face_3',SMESH.FACE)
Face_4_5 = Mesh_1_2.GroupOnGeom(Face_4_2,'Face_4',SMESH.FACE)
Face_5_5 = Mesh_1_2.GroupOnGeom(Face_5_2,'Face_5',SMESH.FACE)
Face_6_5 = Mesh_1_2.GroupOnGeom(Face_6_2,'Face_6',SMESH.FACE)
isDone = Mesh_1_2.Compute()
[ Face_1_5, Face_2_5, Face_3_5, Face_4_5, Face_5_5, Face_6_5 ] = Mesh_1_2.GetGroups()
faceID = Mesh_1_2.AddFace( [ 9, 10, 21, 1 ] )
faceID = Mesh_1_2.AddFace( [ 18, 26, 27, 23 ] )
faceID = Mesh_1_2.AddFace( [ 18, 23, 9, 1 ] )
faceID = Mesh_1_2.AddFace( [ 26, 27, 21, 10 ] )
faceID = Mesh_1_2.AddFace( [ 18, 26, 10, 1 ] )
faceID = Mesh_1_2.AddFace( [ 23, 27, 21, 9 ] )
faceID = Mesh_1_2.AddFace( [ 23, 26, 27, 18 ] )
faceID = Mesh_1_2.AddFace( [ 5, 14, 22, 13 ] )
faceID = Mesh_1_2.AddFace( [ 5, 13, 23, 18 ] )
faceID = Mesh_1_2.AddFace( [ 14, 22, 27, 26 ] )
faceID = Mesh_1_2.AddFace( [ 5, 14, 26, 18 ] )
faceID = Mesh_1_2.AddFace( [ 13, 22, 27, 23 ] )
faceID = Mesh_1_2.AddFace( [ 21, 3, 11, 10 ] )
faceID = Mesh_1_2.AddFace( [ 26, 20, 24, 27 ] )
faceID = Mesh_1_2.AddFace( [ 26, 27, 21, 10 ] )
faceID = Mesh_1_2.AddFace( [ 20, 24, 11, 3 ] )
faceID = Mesh_1_2.AddFace( [ 26, 20, 3, 10 ] )
faceID = Mesh_1_2.AddFace( [ 27, 24, 11, 21 ] )
faceID = Mesh_1_2.AddFace( [ 27, 20, 24, 26 ] )
faceID = Mesh_1_2.AddFace( [ 14, 7, 15, 22 ] )
faceID = Mesh_1_2.AddFace( [ 14, 22, 27, 26 ] )
faceID = Mesh_1_2.AddFace( [ 7, 15, 24, 20 ] )
faceID = Mesh_1_2.AddFace( [ 14, 7, 20, 26 ] )
faceID = Mesh_1_2.AddFace( [ 22, 15, 24, 27 ] )
faceID = Mesh_1_2.AddFace( [ 2, 21, 12, 9 ] )
faceID = Mesh_1_2.AddFace( [ 23, 27, 25, 17 ] )
faceID = Mesh_1_2.AddFace( [ 23, 17, 2, 9 ] )
faceID = Mesh_1_2.AddFace( [ 27, 25, 12, 21 ] )
faceID = Mesh_1_2.AddFace( [ 23, 27, 21, 9 ] )
faceID = Mesh_1_2.AddFace( [ 17, 25, 12, 2 ] )
faceID = Mesh_1_2.AddFace( [ 17, 27, 25, 23 ] )
faceID = Mesh_1_2.AddFace( [ 13, 22, 16, 6 ] )
faceID = Mesh_1_2.AddFace( [ 13, 6, 17, 23 ] )
faceID = Mesh_1_2.AddFace( [ 22, 16, 25, 27 ] )
faceID = Mesh_1_2.AddFace( [ 13, 22, 27, 23 ] )
faceID = Mesh_1_2.AddFace( [ 6, 16, 25, 17 ] )
faceID = Mesh_1_2.AddFace( [ 12, 11, 4, 21 ] )
faceID = Mesh_1_2.AddFace( [ 27, 24, 19, 25 ] )
faceID = Mesh_1_2.AddFace( [ 27, 25, 12, 21 ] )
faceID = Mesh_1_2.AddFace( [ 24, 19, 4, 11 ] )
faceID = Mesh_1_2.AddFace( [ 27, 24, 11, 21 ] )
faceID = Mesh_1_2.AddFace( [ 25, 19, 4, 12 ] )
faceID = Mesh_1_2.AddFace( [ 25, 24, 19, 27 ] )
faceID = Mesh_1_2.AddFace( [ 22, 15, 8, 16 ] )
faceID = Mesh_1_2.AddFace( [ 22, 16, 25, 27 ] )
faceID = Mesh_1_2.AddFace( [ 15, 8, 19, 24 ] )
faceID = Mesh_1_2.AddFace( [ 22, 15, 24, 27 ] )
faceID = Mesh_1_2.AddFace( [ 16, 8, 19, 25 ] )
Mesh_1_2.MergeEqualElements()
edge = Mesh_1_2.AddEdge([ 1, 9 ])
edge = Mesh_1_2.AddEdge([ 1, 10 ])
edge = Mesh_1_2.AddEdge([ 1, 18 ])
edge = Mesh_1_2.AddEdge([ 2, 9 ])
edge = Mesh_1_2.AddEdge([ 2, 12 ])
edge = Mesh_1_2.AddEdge([ 2, 17 ])
edge = Mesh_1_2.AddEdge([ 3, 10 ])
edge = Mesh_1_2.AddEdge([ 3, 11 ])
edge = Mesh_1_2.AddEdge([ 3, 20 ])
edge = Mesh_1_2.AddEdge([ 4, 11 ])
edge = Mesh_1_2.AddEdge([ 4, 12 ])
edge = Mesh_1_2.AddEdge([ 4, 19 ])
edge = Mesh_1_2.AddEdge([ 5, 13 ])
edge = Mesh_1_2.AddEdge([ 5, 14 ])
edge = Mesh_1_2.AddEdge([ 5, 18 ])
edge = Mesh_1_2.AddEdge([ 6, 13 ])
edge = Mesh_1_2.AddEdge([ 6, 16 ])
edge = Mesh_1_2.AddEdge([ 6, 17 ])
edge = Mesh_1_2.AddEdge([ 7, 14 ])
edge = Mesh_1_2.AddEdge([ 7, 15 ])
edge = Mesh_1_2.AddEdge([ 7, 20 ])
edge = Mesh_1_2.AddEdge([ 8, 15 ])
edge = Mesh_1_2.AddEdge([ 8, 16 ])
edge = Mesh_1_2.AddEdge([ 8, 19 ])
edge = Mesh_1_2.AddEdge([ 9, 21 ])
edge = Mesh_1_2.AddEdge([ 9, 23 ])
edge = Mesh_1_2.AddEdge([ 10, 21 ])
edge = Mesh_1_2.AddEdge([ 10, 26 ])
edge = Mesh_1_2.AddEdge([ 11, 21 ])
edge = Mesh_1_2.AddEdge([ 11, 24 ])
edge = Mesh_1_2.AddEdge([ 12, 21 ])
edge = Mesh_1_2.AddEdge([ 12, 25 ])
edge = Mesh_1_2.AddEdge([ 13, 22 ])
edge = Mesh_1_2.AddEdge([ 13, 23 ])
edge = Mesh_1_2.AddEdge([ 14, 22 ])
edge = Mesh_1_2.AddEdge([ 14, 26 ])
edge = Mesh_1_2.AddEdge([ 15, 22 ])
edge = Mesh_1_2.AddEdge([ 15, 24 ])
edge = Mesh_1_2.AddEdge([ 16, 22 ])
edge = Mesh_1_2.AddEdge([ 16, 25 ])
edge = Mesh_1_2.AddEdge([ 17, 23 ])
edge = Mesh_1_2.AddEdge([ 17, 25 ])
edge = Mesh_1_2.AddEdge([ 18, 23 ])
edge = Mesh_1_2.AddEdge([ 18, 26 ])
edge = Mesh_1_2.AddEdge([ 19, 24 ])
edge = Mesh_1_2.AddEdge([ 19, 25 ])
edge = Mesh_1_2.AddEdge([ 20, 24 ])
edge = Mesh_1_2.AddEdge([ 20, 26 ])
edge = Mesh_1_2.AddEdge([ 21, 27 ])
edge = Mesh_1_2.AddEdge([ 22, 27 ])
edge = Mesh_1_2.AddEdge([ 23, 27 ])
edge = Mesh_1_2.AddEdge([ 24, 27 ])
edge = Mesh_1_2.AddEdge([ 25, 27 ])
edge = Mesh_1_2.AddEdge([ 26, 27 ])
Mesh_1_2.MergeEqualElements()
[ Face_1_5, Face_2_5, Face_3_5, Face_4_5, Face_5_5, Face_6_5 ] = Mesh_1_2.GetGroups()
Volumes = Mesh_1_2.CreateEmptyGroup( SMESH.VOLUME, 'Volumes' )
nbAdd = Volumes.AddFrom( Mesh_1_2.GetMesh() )
[ Face_1_5, Face_2_5, Face_3_5, Face_4_5, Face_5_5, Face_6_5, Volumes ] = Mesh_1_2.GetGroups()


## Set names of Mesh objects
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Hexa_3D.GetAlgorithm(), 'Hexa_3D')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Number_of_Segments_1_1, 'Number of Segments_1')
smesh.SetName(Number_of_Segments_1_2, 'Number of Segments_1')
smesh.SetName(Number_of_Segments_1, 'Number of Segments_1')
smesh.SetName(Face_1_3, 'Face_1')
smesh.SetName(Face_2_3, 'Face_2')
smesh.SetName(Face_3_3, 'Face_3')
smesh.SetName(Face_4_3, 'Face_4')
smesh.SetName(Face_5_3, 'Face_5')
smesh.SetName(Face_6_3, 'Face_6')
smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
smesh.SetName(Mesh_1_2.GetMesh(), 'Mesh_1')
smesh.SetName(Mesh_1_1.GetMesh(), 'Mesh_1')
smesh.SetName(Volumes, 'Volumes')
smesh.SetName(Face_6_5, 'Face_6')
smesh.SetName(Face_4_5, 'Face_4')
smesh.SetName(Face_5_5, 'Face_5')
smesh.SetName(Face_2_5, 'Face_2')
smesh.SetName(Face_3_5, 'Face_3')
smesh.SetName(Face_1_5, 'Face_1')
smesh.SetName(Face_6_4, 'Face_6')
smesh.SetName(Face_5_4, 'Face_5')
smesh.SetName(Face_4_4, 'Face_4')
smesh.SetName(Face_3_4, 'Face_3')
smesh.SetName(Face_2_4, 'Face_2')
smesh.SetName(Face_1_4, 'Face_1')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
